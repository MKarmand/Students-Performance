# -*- coding: utf-8 -*-
"""StudentPerformance.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12sIQ1Gu2b0ShaScKSz4Jhuv45F4VCi6O

# Proyek Akhir: Menyelesaikan Permasalahan Perusahaan Edutech

- Nama: Muhammad Kristover Armand
- Email: mkarmand43@gmail.com
- Id Dicoding: mk_armand_13

## Persiapan

### Menyiapkan library yang dibutuhkan
"""

import pandas as pd
import seaborn as sns
import joblib
import matplotlib.pyplot as plt
from imblearn.over_sampling import SMOTE
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report, confusion_matrix

"""### Menyiapkan data yang akan diguankan"""

df = pd.read_csv('data.csv')
df

# Membaca file dengan delimiter titik koma
file_path = "data.csv"
df = pd.read_csv(file_path, sep=';')
df

"""## Data Understanding"""

df.info()
df.describe()
df['Status'].value_counts()

df.isnull().sum()

sns.countplot(data=df, x='Status')
plt.title("Distribusi Status Mahasiswa")
plt.show()

# Pilih kolom numerik
import matplotlib.pyplot as plt
numerical_cols = df.select_dtypes(include=['int64', 'float64']).columns
# Tentukan ukuran figure dan grid
plt.figure(figsize=(18, 15))
df[numerical_cols].hist(bins=20, layout=(6, 6), figsize=(18, 15), edgecolor='black')
plt.tight_layout()
plt.suptitle("Distribusi Fitur Numerikal", fontsize=20, y=1.02)
plt.show()

numerical_df = df[numerical_cols]

plt.figure(figsize=(20, 16))  # Perbesar area plot
sns.heatmap(numerical_df.corr(),
            annot=True,            # Tampilkan angka korelasi
            fmt=".2f",             # Dua angka desimal
            cmap='coolwarm',       # Skema warna
            cbar=True,             # Tampilkan colorbar
            square=True,           # Kotak per sel
            linewidths=0.5,        # Garis antar sel
            linecolor='gray')      # Warna garis antar sel

plt.title('Correlation Heatmap - Fitur Numerik', fontsize=16)
plt.xticks(rotation=45, ha='right')  # Putar label X
plt.yticks(rotation=0)               # Label Y tetap horizontal
plt.tight_layout()
plt.show()

# Tentukan ukuran grid
n_cols = 3
n_rows = (len(numerical_cols) + n_cols - 1) // n_cols

plt.figure(figsize=(6 * n_cols, 4 * n_rows))

for i, col in enumerate(numerical_cols, 1):
    plt.subplot(n_rows, n_cols, i)
    sns.histplot(data=df, x=col, hue='Status', bins=30, kde=False, element="step", stat="count")
    plt.title(f'Distribusi {col} berdasarkan Status')
    plt.xlabel(col)
    plt.ylabel('Count')

plt.tight_layout()
plt.suptitle("Distribusi Fitur Numerikal berdasarkan Status", fontsize=20, y=1.02)
plt.show()

"""## Data Preparation / Preprocessing"""

X = df.drop(columns='Status')
y = df['Status']

smote = SMOTE(random_state=42)
X_smote, y_smote = smote.fit_resample(X, y)

from sklearn.preprocessing import LabelEncoder

le = LabelEncoder()
y_encoded = le.fit_transform(y_smote)

X_train, X_test, y_train, y_test = train_test_split(X_smote, y_encoded, random_state=42)

"""## Modeling"""

model = RandomForestClassifier(random_state=42)
model.fit(X_train, y_train)
y_pred = model.predict(X_test)

"""## Evaluation"""

print(confusion_matrix(y_test, y_pred))
print(classification_report(y_test, y_pred))

# Simpan model ke file model.pkl
joblib.dump(model, 'model.pkl')